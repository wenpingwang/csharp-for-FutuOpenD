// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetOptionChain.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Qot_GetOptionChain {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class QotGetOptionChain {

    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_C2S__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.C2S, global::Qot_GetOptionChain.C2S.Builder> internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_OptionItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.OptionItem, global::Qot_GetOptionChain.OptionItem.Builder> internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_OptionChain__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.OptionChain, global::Qot_GetOptionChain.OptionChain.Builder> internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_S2C__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.S2C, global::Qot_GetOptionChain.S2C.Builder> internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_Request__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.Request, global::Qot_GetOptionChain.Request.Builder> internal__static_Qot_GetOptionChain_Request__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Qot_GetOptionChain_Response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.Response, global::Qot_GetOptionChain.Response.Builder> internal__static_Qot_GetOptionChain_Response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;

    static QotGetOptionChain() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhRb3RfR2V0T3B0aW9uQ2hhaW4ucHJvdG8SElFvdF9HZXRPcHRpb25DaGFp", 
            "bhoMQ29tbW9uLnByb3RvGhBRb3RfQ29tbW9uLnByb3RvIm8KA0MyUxIjCgVv", 
            "d25lchgBIAIoCzIULlFvdF9Db21tb24uU2VjdXJpdHkSDAoEdHlwZRgCIAEo", 
            "BRIRCgljb25kaXRpb24YAyABKAUSEQoJYmVnaW5UaW1lGAQgAigJEg8KB2Vu", 
            "ZFRpbWUYBSACKAkiZwoKT3B0aW9uSXRlbRIsCgRjYWxsGAEgASgLMh4uUW90", 
            "X0NvbW1vbi5TZWN1cml0eVN0YXRpY0luZm8SKwoDcHV0GAIgASgLMh4uUW90", 
            "X0NvbW1vbi5TZWN1cml0eVN0YXRpY0luZm8iUQoLT3B0aW9uQ2hhaW4SEgoK", 
            "c3RyaWtlVGltZRgBIAIoCRIuCgZvcHRpb24YAiADKAsyHi5Rb3RfR2V0T3B0", 
            "aW9uQ2hhaW4uT3B0aW9uSXRlbSI7CgNTMkMSNAoLb3B0aW9uQ2hhaW4YASAD", 
            "KAsyHy5Rb3RfR2V0T3B0aW9uQ2hhaW4uT3B0aW9uQ2hhaW4iLwoHUmVxdWVz", 
            "dBIkCgNjMnMYASACKAsyFy5Rb3RfR2V0T3B0aW9uQ2hhaW4uQzJTImgKCFJl", 
            "c3BvbnNlEhUKB3JldFR5cGUYASACKAU6BC00MDASDgoGcmV0TXNnGAIgASgJ", 
            "Eg8KB2VyckNvZGUYAyABKAUSJAoDczJjGAQgASgLMhcuUW90X0dldE9wdGlv", 
            "bkNoYWluLlMyQypiCg5PcHRpb25Db25kVHlwZRIZChVPcHRpb25Db25kVHlw", 
            "ZV9Vbmtub3cQABIZChVPcHRpb25Db25kVHlwZV9XaXRoSW4QARIaChZPcHRp", 
          "b25Db25kVHlwZV9PdXRzaWRlEAI="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Qot_GetOptionChain_C2S__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.C2S, global::Qot_GetOptionChain.C2S.Builder>(internal__static_Qot_GetOptionChain_C2S__Descriptor,
                new string[] { "Owner", "Type", "Condition", "BeginTime", "EndTime", });
        internal__static_Qot_GetOptionChain_OptionItem__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.OptionItem, global::Qot_GetOptionChain.OptionItem.Builder>(internal__static_Qot_GetOptionChain_OptionItem__Descriptor,
                new string[] { "Call", "Put", });
        internal__static_Qot_GetOptionChain_OptionChain__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.OptionChain, global::Qot_GetOptionChain.OptionChain.Builder>(internal__static_Qot_GetOptionChain_OptionChain__Descriptor,
                new string[] { "StrikeTime", "Option", });
        internal__static_Qot_GetOptionChain_S2C__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.S2C, global::Qot_GetOptionChain.S2C.Builder>(internal__static_Qot_GetOptionChain_S2C__Descriptor,
                new string[] { "OptionChain", });
        internal__static_Qot_GetOptionChain_Request__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Qot_GetOptionChain_Request__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.Request, global::Qot_GetOptionChain.Request.Builder>(internal__static_Qot_GetOptionChain_Request__Descriptor,
                new string[] { "C2S", });
        internal__static_Qot_GetOptionChain_Response__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Qot_GetOptionChain_Response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Qot_GetOptionChain.Response, global::Qot_GetOptionChain.Response.Builder>(internal__static_Qot_GetOptionChain_Response__Descriptor,
                new string[] { "RetType", "RetMsg", "ErrCode", "S2C", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Common.Common.RegisterAllExtensions(registry);
        global::Qot_Common.QotCommon.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Common.Common.Descriptor, 
          global::Qot_Common.QotCommon.Descriptor, 
          }, assigner);
    }
    #endregion

  }
  #region Enums
  public enum OptionCondType {
    OptionCondType_Unknow = 0,
    OptionCondType_WithIn = 1,
    OptionCondType_Outside = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class C2S : pb::GeneratedMessage<C2S, C2S.Builder> {
    private C2S() { }
    private static readonly C2S defaultInstance = new C2S().MakeReadOnly();
    private static readonly string[] _c2SFieldNames = new string[] { "beginTime", "condition", "endTime", "owner", "type" };
    private static readonly uint[] _c2SFieldTags = new uint[] { 34, 24, 42, 10, 16 };
    public static C2S DefaultInstance {
      get { return defaultInstance; }
    }

    public override C2S DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override C2S ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_C2S__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<C2S, C2S.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_C2S__FieldAccessorTable; }
    }

    public const int OwnerFieldNumber = 1;
    private bool hasOwner;
    private global::Qot_Common.Security owner_;
    public bool HasOwner {
      get { return hasOwner; }
    }
    public global::Qot_Common.Security Owner {
      get { return owner_ ?? global::Qot_Common.Security.DefaultInstance; }
    }

    public const int TypeFieldNumber = 2;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }

    public const int ConditionFieldNumber = 3;
    private bool hasCondition;
    private int condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public int Condition {
      get { return condition_; }
    }

    public const int BeginTimeFieldNumber = 4;
    private bool hasBeginTime;
    private string beginTime_ = "";
    public bool HasBeginTime {
      get { return hasBeginTime; }
    }
    public string BeginTime {
      get { return beginTime_; }
    }

    public const int EndTimeFieldNumber = 5;
    private bool hasEndTime;
    private string endTime_ = "";
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public string EndTime {
      get { return endTime_; }
    }

    public override bool IsInitialized {
      get {
        if (!hasOwner) return false;
        if (!hasBeginTime) return false;
        if (!hasEndTime) return false;
        if (!Owner.IsInitialized) return false;
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _c2SFieldNames;
      if (hasOwner) {
        output.WriteMessage(1, field_names[3], Owner);
      }
      if (hasType) {
        output.WriteInt32(2, field_names[4], Type);
      }
      if (hasCondition) {
        output.WriteInt32(3, field_names[1], Condition);
      }
      if (hasBeginTime) {
        output.WriteString(4, field_names[0], BeginTime);
      }
      if (hasEndTime) {
        output.WriteString(5, field_names[2], EndTime);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasOwner) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Owner);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Type);
      }
      if (hasCondition) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Condition);
      }
      if (hasBeginTime) {
        size += pb::CodedOutputStream.ComputeStringSize(4, BeginTime);
      }
      if (hasEndTime) {
        size += pb::CodedOutputStream.ComputeStringSize(5, EndTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static C2S ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S MakeReadOnly() {
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private C2S result;

      private C2S PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S original = result;
          result = new C2S();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override C2S MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.C2S.Descriptor; }
      }

      public override C2S DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.C2S.DefaultInstance; }
      }

      public override C2S BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S) {
          return MergeFrom((C2S) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(C2S other) {
        if (other == global::Qot_GetOptionChain.C2S.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOwner) {
          MergeOwner(other.Owner);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasCondition) {
          Condition = other.Condition;
        }
        if (other.HasBeginTime) {
          BeginTime = other.BeginTime;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Qot_Common.Security.Builder subBuilder = global::Qot_Common.Security.CreateBuilder();
              if (result.hasOwner) {
                subBuilder.MergeFrom(Owner);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Owner = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 24: {
              result.hasCondition = input.ReadInt32(ref result.condition_);
              break;
            }
            case 34: {
              result.hasBeginTime = input.ReadString(ref result.beginTime_);
              break;
            }
            case 42: {
              result.hasEndTime = input.ReadString(ref result.endTime_);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasOwner {
       get { return result.hasOwner; }
      }
      public global::Qot_Common.Security Owner {
        get { return result.Owner; }
        set { SetOwner(value); }
      }
      public Builder SetOwner(global::Qot_Common.Security value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOwner = true;
        result.owner_ = value;
        return this;
      }
      public Builder SetOwner(global::Qot_Common.Security.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOwner = true;
        result.owner_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOwner(global::Qot_Common.Security value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOwner &&
            result.owner_ != global::Qot_Common.Security.DefaultInstance) {
            result.owner_ = global::Qot_Common.Security.CreateBuilder(result.owner_).MergeFrom(value).BuildPartial();
        } else {
          result.owner_ = value;
        }
        result.hasOwner = true;
        return this;
      }
      public Builder ClearOwner() {
        PrepareBuilder();
        result.hasOwner = false;
        result.owner_ = null;
        return this;
      }

      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }

      public bool HasCondition {
        get { return result.hasCondition; }
      }
      public int Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(int value) {
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = 0;
        return this;
      }

      public bool HasBeginTime {
        get { return result.hasBeginTime; }
      }
      public string BeginTime {
        get { return result.BeginTime; }
        set { SetBeginTime(value); }
      }
      public Builder SetBeginTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBeginTime = true;
        result.beginTime_ = value;
        return this;
      }
      public Builder ClearBeginTime() {
        PrepareBuilder();
        result.hasBeginTime = false;
        result.beginTime_ = "";
        return this;
      }

      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public string EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        PrepareBuilder();
        result.hasEndTime = false;
        result.endTime_ = "";
        return this;
      }
    }
    static C2S() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OptionItem : pb::GeneratedMessage<OptionItem, OptionItem.Builder> {
    private OptionItem() { }
    private static readonly OptionItem defaultInstance = new OptionItem().MakeReadOnly();
    private static readonly string[] _optionItemFieldNames = new string[] { "call", "put" };
    private static readonly uint[] _optionItemFieldTags = new uint[] { 10, 18 };
    public static OptionItem DefaultInstance {
      get { return defaultInstance; }
    }

    public override OptionItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override OptionItem ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionItem__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<OptionItem, OptionItem.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionItem__FieldAccessorTable; }
    }

    public const int CallFieldNumber = 1;
    private bool hasCall;
    private global::Qot_Common.SecurityStaticInfo call_;
    public bool HasCall {
      get { return hasCall; }
    }
    public global::Qot_Common.SecurityStaticInfo Call {
      get { return call_ ?? global::Qot_Common.SecurityStaticInfo.DefaultInstance; }
    }

    public const int PutFieldNumber = 2;
    private bool hasPut;
    private global::Qot_Common.SecurityStaticInfo put_;
    public bool HasPut {
      get { return hasPut; }
    }
    public global::Qot_Common.SecurityStaticInfo Put {
      get { return put_ ?? global::Qot_Common.SecurityStaticInfo.DefaultInstance; }
    }

    public override bool IsInitialized {
      get {
        if (HasCall) {
          if (!Call.IsInitialized) return false;
        }
        if (HasPut) {
          if (!Put.IsInitialized) return false;
        }
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _optionItemFieldNames;
      if (hasCall) {
        output.WriteMessage(1, field_names[0], Call);
      }
      if (hasPut) {
        output.WriteMessage(2, field_names[1], Put);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasCall) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Call);
      }
      if (hasPut) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Put);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OptionItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OptionItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OptionItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OptionItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OptionItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OptionItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OptionItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OptionItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OptionItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OptionItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OptionItem MakeReadOnly() {
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OptionItem prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OptionItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OptionItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private OptionItem result;

      private OptionItem PrepareBuilder() {
        if (resultIsReadOnly) {
          OptionItem original = result;
          result = new OptionItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override OptionItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.OptionItem.Descriptor; }
      }

      public override OptionItem DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.OptionItem.DefaultInstance; }
      }

      public override OptionItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OptionItem) {
          return MergeFrom((OptionItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(OptionItem other) {
        if (other == global::Qot_GetOptionChain.OptionItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCall) {
          MergeCall(other.Call);
        }
        if (other.HasPut) {
          MergePut(other.Put);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_optionItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _optionItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Qot_Common.SecurityStaticInfo.Builder subBuilder = global::Qot_Common.SecurityStaticInfo.CreateBuilder();
              if (result.hasCall) {
                subBuilder.MergeFrom(Call);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Call = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Qot_Common.SecurityStaticInfo.Builder subBuilder = global::Qot_Common.SecurityStaticInfo.CreateBuilder();
              if (result.hasPut) {
                subBuilder.MergeFrom(Put);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Put = subBuilder.BuildPartial();
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasCall {
       get { return result.hasCall; }
      }
      public global::Qot_Common.SecurityStaticInfo Call {
        get { return result.Call; }
        set { SetCall(value); }
      }
      public Builder SetCall(global::Qot_Common.SecurityStaticInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCall = true;
        result.call_ = value;
        return this;
      }
      public Builder SetCall(global::Qot_Common.SecurityStaticInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCall = true;
        result.call_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCall(global::Qot_Common.SecurityStaticInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCall &&
            result.call_ != global::Qot_Common.SecurityStaticInfo.DefaultInstance) {
            result.call_ = global::Qot_Common.SecurityStaticInfo.CreateBuilder(result.call_).MergeFrom(value).BuildPartial();
        } else {
          result.call_ = value;
        }
        result.hasCall = true;
        return this;
      }
      public Builder ClearCall() {
        PrepareBuilder();
        result.hasCall = false;
        result.call_ = null;
        return this;
      }

      public bool HasPut {
       get { return result.hasPut; }
      }
      public global::Qot_Common.SecurityStaticInfo Put {
        get { return result.Put; }
        set { SetPut(value); }
      }
      public Builder SetPut(global::Qot_Common.SecurityStaticInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPut = true;
        result.put_ = value;
        return this;
      }
      public Builder SetPut(global::Qot_Common.SecurityStaticInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPut = true;
        result.put_ = builderForValue.Build();
        return this;
      }
      public Builder MergePut(global::Qot_Common.SecurityStaticInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPut &&
            result.put_ != global::Qot_Common.SecurityStaticInfo.DefaultInstance) {
            result.put_ = global::Qot_Common.SecurityStaticInfo.CreateBuilder(result.put_).MergeFrom(value).BuildPartial();
        } else {
          result.put_ = value;
        }
        result.hasPut = true;
        return this;
      }
      public Builder ClearPut() {
        PrepareBuilder();
        result.hasPut = false;
        result.put_ = null;
        return this;
      }
    }
    static OptionItem() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OptionChain : pb::GeneratedMessage<OptionChain, OptionChain.Builder> {
    private OptionChain() { }
    private static readonly OptionChain defaultInstance = new OptionChain().MakeReadOnly();
    private static readonly string[] _optionChainFieldNames = new string[] { "option", "strikeTime" };
    private static readonly uint[] _optionChainFieldTags = new uint[] { 18, 10 };
    public static OptionChain DefaultInstance {
      get { return defaultInstance; }
    }

    public override OptionChain DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override OptionChain ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionChain__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<OptionChain, OptionChain.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_OptionChain__FieldAccessorTable; }
    }

    public const int StrikeTimeFieldNumber = 1;
    private bool hasStrikeTime;
    private string strikeTime_ = "";
    public bool HasStrikeTime {
      get { return hasStrikeTime; }
    }
    public string StrikeTime {
      get { return strikeTime_; }
    }

    public const int OptionFieldNumber = 2;
    private pbc::PopsicleList<global::Qot_GetOptionChain.OptionItem> option_ = new pbc::PopsicleList<global::Qot_GetOptionChain.OptionItem>();
    public scg::IList<global::Qot_GetOptionChain.OptionItem> OptionList {
      get { return option_; }
    }
    public int OptionCount {
      get { return option_.Count; }
    }
    public global::Qot_GetOptionChain.OptionItem GetOption(int index) {
      return option_[index];
    }

    public override bool IsInitialized {
      get {
        if (!hasStrikeTime) return false;
        foreach (global::Qot_GetOptionChain.OptionItem element in OptionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _optionChainFieldNames;
      if (hasStrikeTime) {
        output.WriteString(1, field_names[1], StrikeTime);
      }
      if (option_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], option_);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasStrikeTime) {
        size += pb::CodedOutputStream.ComputeStringSize(1, StrikeTime);
      }
      foreach (global::Qot_GetOptionChain.OptionItem element in OptionList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OptionChain ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OptionChain ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OptionChain ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OptionChain ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OptionChain ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OptionChain ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OptionChain ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OptionChain ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OptionChain ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OptionChain ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OptionChain MakeReadOnly() {
      option_.MakeReadOnly();
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OptionChain prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OptionChain, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OptionChain cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private OptionChain result;

      private OptionChain PrepareBuilder() {
        if (resultIsReadOnly) {
          OptionChain original = result;
          result = new OptionChain();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override OptionChain MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.OptionChain.Descriptor; }
      }

      public override OptionChain DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.OptionChain.DefaultInstance; }
      }

      public override OptionChain BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OptionChain) {
          return MergeFrom((OptionChain) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(OptionChain other) {
        if (other == global::Qot_GetOptionChain.OptionChain.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStrikeTime) {
          StrikeTime = other.StrikeTime;
        }
        if (other.option_.Count != 0) {
          result.option_.Add(other.option_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_optionChainFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _optionChainFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStrikeTime = input.ReadString(ref result.strikeTime_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.option_, global::Qot_GetOptionChain.OptionItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasStrikeTime {
        get { return result.hasStrikeTime; }
      }
      public string StrikeTime {
        get { return result.StrikeTime; }
        set { SetStrikeTime(value); }
      }
      public Builder SetStrikeTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStrikeTime = true;
        result.strikeTime_ = value;
        return this;
      }
      public Builder ClearStrikeTime() {
        PrepareBuilder();
        result.hasStrikeTime = false;
        result.strikeTime_ = "";
        return this;
      }

      public pbc::IPopsicleList<global::Qot_GetOptionChain.OptionItem> OptionList {
        get { return PrepareBuilder().option_; }
      }
      public int OptionCount {
        get { return result.OptionCount; }
      }
      public global::Qot_GetOptionChain.OptionItem GetOption(int index) {
        return result.GetOption(index);
      }
      public Builder SetOption(int index, global::Qot_GetOptionChain.OptionItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.option_[index] = value;
        return this;
      }
      public Builder SetOption(int index, global::Qot_GetOptionChain.OptionItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.option_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOption(global::Qot_GetOptionChain.OptionItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.option_.Add(value);
        return this;
      }
      public Builder AddOption(global::Qot_GetOptionChain.OptionItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.option_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOption(scg::IEnumerable<global::Qot_GetOptionChain.OptionItem> values) {
        PrepareBuilder();
        result.option_.Add(values);
        return this;
      }
      public Builder ClearOption() {
        PrepareBuilder();
        result.option_.Clear();
        return this;
      }
    }
    static OptionChain() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class S2C : pb::GeneratedMessage<S2C, S2C.Builder> {
    private S2C() { }
    private static readonly S2C defaultInstance = new S2C().MakeReadOnly();
    private static readonly string[] _s2CFieldNames = new string[] { "optionChain" };
    private static readonly uint[] _s2CFieldTags = new uint[] { 10 };
    public static S2C DefaultInstance {
      get { return defaultInstance; }
    }

    public override S2C DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override S2C ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_S2C__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<S2C, S2C.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_S2C__FieldAccessorTable; }
    }

    public const int OptionChainFieldNumber = 1;
    private pbc::PopsicleList<global::Qot_GetOptionChain.OptionChain> optionChain_ = new pbc::PopsicleList<global::Qot_GetOptionChain.OptionChain>();
    public scg::IList<global::Qot_GetOptionChain.OptionChain> OptionChainList {
      get { return optionChain_; }
    }
    public int OptionChainCount {
      get { return optionChain_.Count; }
    }
    public global::Qot_GetOptionChain.OptionChain GetOptionChain(int index) {
      return optionChain_[index];
    }

    public override bool IsInitialized {
      get {
        foreach (global::Qot_GetOptionChain.OptionChain element in OptionChainList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _s2CFieldNames;
      if (optionChain_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], optionChain_);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      foreach (global::Qot_GetOptionChain.OptionChain element in OptionChainList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static S2C ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C MakeReadOnly() {
      optionChain_.MakeReadOnly();
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private S2C result;

      private S2C PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C original = result;
          result = new S2C();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override S2C MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.S2C.Descriptor; }
      }

      public override S2C DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.S2C.DefaultInstance; }
      }

      public override S2C BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C) {
          return MergeFrom((S2C) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(S2C other) {
        if (other == global::Qot_GetOptionChain.S2C.DefaultInstance) return this;
        PrepareBuilder();
        if (other.optionChain_.Count != 0) {
          result.optionChain_.Add(other.optionChain_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.optionChain_, global::Qot_GetOptionChain.OptionChain.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public pbc::IPopsicleList<global::Qot_GetOptionChain.OptionChain> OptionChainList {
        get { return PrepareBuilder().optionChain_; }
      }
      public int OptionChainCount {
        get { return result.OptionChainCount; }
      }
      public global::Qot_GetOptionChain.OptionChain GetOptionChain(int index) {
        return result.GetOptionChain(index);
      }
      public Builder SetOptionChain(int index, global::Qot_GetOptionChain.OptionChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.optionChain_[index] = value;
        return this;
      }
      public Builder SetOptionChain(int index, global::Qot_GetOptionChain.OptionChain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.optionChain_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOptionChain(global::Qot_GetOptionChain.OptionChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.optionChain_.Add(value);
        return this;
      }
      public Builder AddOptionChain(global::Qot_GetOptionChain.OptionChain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.optionChain_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOptionChain(scg::IEnumerable<global::Qot_GetOptionChain.OptionChain> values) {
        PrepareBuilder();
        result.optionChain_.Add(values);
        return this;
      }
      public Builder ClearOptionChain() {
        PrepareBuilder();
        result.optionChain_.Clear();
        return this;
      }
    }
    static S2C() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Request : pb::GeneratedMessage<Request, Request.Builder> {
    private Request() { }
    private static readonly Request defaultInstance = new Request().MakeReadOnly();
    private static readonly string[] _requestFieldNames = new string[] { "c2s" };
    private static readonly uint[] _requestFieldTags = new uint[] { 10 };
    public static Request DefaultInstance {
      get { return defaultInstance; }
    }

    public override Request DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override Request ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_Request__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<Request, Request.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_Request__FieldAccessorTable; }
    }

    public const int C2SFieldNumber = 1;
    private bool hasC2S;
    private global::Qot_GetOptionChain.C2S c2S_;
    public bool HasC2S {
      get { return hasC2S; }
    }
    public global::Qot_GetOptionChain.C2S C2S {
      get { return c2S_ ?? global::Qot_GetOptionChain.C2S.DefaultInstance; }
    }

    public override bool IsInitialized {
      get {
        if (!hasC2S) return false;
        if (!C2S.IsInitialized) return false;
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _requestFieldNames;
      if (hasC2S) {
        output.WriteMessage(1, field_names[0], C2S);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasC2S) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, C2S);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Request ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Request ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Request ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Request ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Request ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Request MakeReadOnly() {
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Request prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Request, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Request cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private Request result;

      private Request PrepareBuilder() {
        if (resultIsReadOnly) {
          Request original = result;
          result = new Request();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override Request MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.Request.Descriptor; }
      }

      public override Request DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.Request.DefaultInstance; }
      }

      public override Request BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Request) {
          return MergeFrom((Request) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(Request other) {
        if (other == global::Qot_GetOptionChain.Request.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasC2S) {
          MergeC2S(other.C2S);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Qot_GetOptionChain.C2S.Builder subBuilder = global::Qot_GetOptionChain.C2S.CreateBuilder();
              if (result.hasC2S) {
                subBuilder.MergeFrom(C2S);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              C2S = subBuilder.BuildPartial();
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasC2S {
       get { return result.hasC2S; }
      }
      public global::Qot_GetOptionChain.C2S C2S {
        get { return result.C2S; }
        set { SetC2S(value); }
      }
      public Builder SetC2S(global::Qot_GetOptionChain.C2S value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasC2S = true;
        result.c2S_ = value;
        return this;
      }
      public Builder SetC2S(global::Qot_GetOptionChain.C2S.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasC2S = true;
        result.c2S_ = builderForValue.Build();
        return this;
      }
      public Builder MergeC2S(global::Qot_GetOptionChain.C2S value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasC2S &&
            result.c2S_ != global::Qot_GetOptionChain.C2S.DefaultInstance) {
            result.c2S_ = global::Qot_GetOptionChain.C2S.CreateBuilder(result.c2S_).MergeFrom(value).BuildPartial();
        } else {
          result.c2S_ = value;
        }
        result.hasC2S = true;
        return this;
      }
      public Builder ClearC2S() {
        PrepareBuilder();
        result.hasC2S = false;
        result.c2S_ = null;
        return this;
      }
    }
    static Request() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Response : pb::GeneratedMessage<Response, Response.Builder> {
    private Response() { }
    private static readonly Response defaultInstance = new Response().MakeReadOnly();
    private static readonly string[] _responseFieldNames = new string[] { "errCode", "retMsg", "retType", "s2c" };
    private static readonly uint[] _responseFieldTags = new uint[] { 24, 18, 8, 34 };
    public static Response DefaultInstance {
      get { return defaultInstance; }
    }

    public override Response DefaultInstanceForType {
      get { return DefaultInstance; }
    }

    protected override Response ThisMessage {
      get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_Response__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<Response, Response.Builder> InternalFieldAccessors {
      get { return global::Qot_GetOptionChain.QotGetOptionChain.internal__static_Qot_GetOptionChain_Response__FieldAccessorTable; }
    }

    public const int RetTypeFieldNumber = 1;
    private bool hasRetType;
    private int retType_ = -400;
    public bool HasRetType {
      get { return hasRetType; }
    }
    public int RetType {
      get { return retType_; }
    }

    public const int RetMsgFieldNumber = 2;
    private bool hasRetMsg;
    private string retMsg_ = "";
    public bool HasRetMsg {
      get { return hasRetMsg; }
    }
    public string RetMsg {
      get { return retMsg_; }
    }

    public const int ErrCodeFieldNumber = 3;
    private bool hasErrCode;
    private int errCode_;
    public bool HasErrCode {
      get { return hasErrCode; }
    }
    public int ErrCode {
      get { return errCode_; }
    }

    public const int S2CFieldNumber = 4;
    private bool hasS2C;
    private global::Qot_GetOptionChain.S2C s2C_;
    public bool HasS2C {
      get { return hasS2C; }
    }
    public global::Qot_GetOptionChain.S2C S2C {
      get { return s2C_ ?? global::Qot_GetOptionChain.S2C.DefaultInstance; }
    }

    public override bool IsInitialized {
      get {
        if (!hasRetType) return false;
        if (HasS2C) {
          if (!S2C.IsInitialized) return false;
        }
        return true;
      }
    }

    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _responseFieldNames;
      if (hasRetType) {
        output.WriteInt32(1, field_names[2], RetType);
      }
      if (hasRetMsg) {
        output.WriteString(2, field_names[1], RetMsg);
      }
      if (hasErrCode) {
        output.WriteInt32(3, field_names[0], ErrCode);
      }
      if (hasS2C) {
        output.WriteMessage(4, field_names[3], S2C);
      }
      UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }

    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasRetType) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, RetType);
      }
      if (hasRetMsg) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RetMsg);
      }
      if (hasErrCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ErrCode);
      }
      if (hasS2C) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, S2C);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Response MakeReadOnly() {
      return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Response prototype) {
      return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }

      private bool resultIsReadOnly;
      private Response result;

      private Response PrepareBuilder() {
        if (resultIsReadOnly) {
          Response original = result;
          result = new Response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }

      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }

      protected override Response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }

      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }

      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }

      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Qot_GetOptionChain.Response.Descriptor; }
      }

      public override Response DefaultInstanceForType {
        get { return global::Qot_GetOptionChain.Response.DefaultInstance; }
      }

      public override Response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }

      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Response) {
          return MergeFrom((Response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }

      public override Builder MergeFrom(Response other) {
        if (other == global::Qot_GetOptionChain.Response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRetType) {
          RetType = other.RetType;
        }
        if (other.HasRetMsg) {
          RetMsg = other.RetMsg;
        }
        if (other.HasErrCode) {
          ErrCode = other.ErrCode;
        }
        if (other.HasS2C) {
          MergeS2C(other.S2C);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }

      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }

      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_responseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _responseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRetType = input.ReadInt32(ref result.retType_);
              break;
            }
            case 18: {
              result.hasRetMsg = input.ReadString(ref result.retMsg_);
              break;
            }
            case 24: {
              result.hasErrCode = input.ReadInt32(ref result.errCode_);
              break;
            }
            case 34: {
              global::Qot_GetOptionChain.S2C.Builder subBuilder = global::Qot_GetOptionChain.S2C.CreateBuilder();
              if (result.hasS2C) {
                subBuilder.MergeFrom(S2C);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              S2C = subBuilder.BuildPartial();
              break;
            }
          }
        }

        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }


      public bool HasRetType {
        get { return result.hasRetType; }
      }
      public int RetType {
        get { return result.RetType; }
        set { SetRetType(value); }
      }
      public Builder SetRetType(int value) {
        PrepareBuilder();
        result.hasRetType = true;
        result.retType_ = value;
        return this;
      }
      public Builder ClearRetType() {
        PrepareBuilder();
        result.hasRetType = false;
        result.retType_ = -400;
        return this;
      }

      public bool HasRetMsg {
        get { return result.hasRetMsg; }
      }
      public string RetMsg {
        get { return result.RetMsg; }
        set { SetRetMsg(value); }
      }
      public Builder SetRetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRetMsg = true;
        result.retMsg_ = value;
        return this;
      }
      public Builder ClearRetMsg() {
        PrepareBuilder();
        result.hasRetMsg = false;
        result.retMsg_ = "";
        return this;
      }

      public bool HasErrCode {
        get { return result.hasErrCode; }
      }
      public int ErrCode {
        get { return result.ErrCode; }
        set { SetErrCode(value); }
      }
      public Builder SetErrCode(int value) {
        PrepareBuilder();
        result.hasErrCode = true;
        result.errCode_ = value;
        return this;
      }
      public Builder ClearErrCode() {
        PrepareBuilder();
        result.hasErrCode = false;
        result.errCode_ = 0;
        return this;
      }

      public bool HasS2C {
       get { return result.hasS2C; }
      }
      public global::Qot_GetOptionChain.S2C S2C {
        get { return result.S2C; }
        set { SetS2C(value); }
      }
      public Builder SetS2C(global::Qot_GetOptionChain.S2C value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasS2C = true;
        result.s2C_ = value;
        return this;
      }
      public Builder SetS2C(global::Qot_GetOptionChain.S2C.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasS2C = true;
        result.s2C_ = builderForValue.Build();
        return this;
      }
      public Builder MergeS2C(global::Qot_GetOptionChain.S2C value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasS2C &&
            result.s2C_ != global::Qot_GetOptionChain.S2C.DefaultInstance) {
            result.s2C_ = global::Qot_GetOptionChain.S2C.CreateBuilder(result.s2C_).MergeFrom(value).BuildPartial();
        } else {
          result.s2C_ = value;
        }
        result.hasS2C = true;
        return this;
      }
      public Builder ClearS2C() {
        PrepareBuilder();
        result.hasS2C = false;
        result.s2C_ = null;
        return this;
      }
    }
    static Response() {
      object.ReferenceEquals(global::Qot_GetOptionChain.QotGetOptionChain.Descriptor, null);
    }
  }

  #endregion

}

#endregion Designer generated code
